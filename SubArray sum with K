Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.
Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2

SOLUTION:-
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int preSum=0;
        int c=0;
        map<int,int>mpp;
        mpp[0]=1;
        int N=nums.size();
        for(int i=0;i<N;i++){
            preSum+=nums[i];
            int z=preSum-k;
            if(mpp.find(z)!=mpp.end()){
                c+=mpp[z];
            }
            mpp[preSum]+=1;
        }
        return c;
    }
};
