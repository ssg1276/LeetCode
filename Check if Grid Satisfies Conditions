You are given a 2D matrix grid of size m x n. You need to check if each cell grid[i][j] is:

Equal to the cell below it, i.e. grid[i][j] == grid[i + 1][j] (if it exists).
Different from the cell to its right, i.e. grid[i][j] != grid[i][j + 1] (if it exists).
Return true if all the cells satisfy these conditions, otherwise, return false.

Example 1:
Input: grid = [[1,0,2],[1,0,2]]
Output: true

SOLUTION:-
class Solution {
public:
    bool satisfiesConditions(vector<vector<int>>& grid) {
        int i=0;
        int j=0;
        int m=grid.size();
        int n=grid[0].size();
     

        for (int i = 0; i < m - 1; i++) {
            for (int j = 0; j <n; j++) {
                if (grid[i][j] != grid[i + 1][j] ) {
                    return false;
                }
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n - 1; j++) {
                if ( grid[i][j] == grid[i][j + 1]) {
                    return false;
                }
            }
        }

        return true;
    }
};
