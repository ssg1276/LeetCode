Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

 
Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000

SOLUTION:-
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n1=nums1.size();
        int n2=nums2.size();
        int n=n1+n2;
        int i=0,j=0,cnt=0;
        int ind1=n/2 - 1;
        int ind2=n/2;
        int el1=-1,el2=-1;
        
        while(i<n1 && j<n2){
            if(nums1[i]<nums2[j]){
                if(cnt==ind1){
                    el1=nums1[i];
                }
                if(cnt==ind2){
                    el2=nums1[i];
                }
                cnt++;
                i++;
            }
            else{
                 if(cnt==ind1){
                    el1=nums2[j];
                }
                if(cnt==ind2){
                    el2=nums2[j];
                }
                cnt++;
                j++;
            }
        }
        while(i<n1){
            if(cnt==ind1){
                    el1=nums1[i];
                }
                if(cnt==ind2){
                    el2=nums1[i];
                }
                cnt++;
                i++;
        }
        while(j<n2){
             if(cnt==ind1){
                    el1=nums2[j];
                }
                if(cnt==ind2){
                    el2=nums2[j];
                }
                cnt++;
                j++;
        }
        if(n%2==0){
            return (double)((double)(el1+el2))/2.0;
        }
        else {
            return el2;
        }
    }
};
