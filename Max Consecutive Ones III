Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6

SOLUTION:-
class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int n=nums.size();
        int l=0,r=0,z=0,maxLen=0;
        while(r<n){
            if(nums[r]==0){
               z++;
            }
               if(z>k){
                if(nums[l]==0){
                    z--;
                }
                  l++;
               }
               if(z<=k){
                  maxLen=max(maxLen,r-l+1);
               }
            
            r++;
         } 
            r++;
        return maxLen;
    }
};
