Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

SOLUTION1:-
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
         int n=nums.size();
        vector<int> temp(n);
        k=k%n;
       
        for(int i=n-k;i<n;i++){
            temp[i-(n-k)]=nums[i];
            
        }
        for(int i=n-k-1;i>=0;i--){
            nums[i+k]=nums[i];
        }
        int j=0;
        for(int i=0;i<k;i++){
            nums[i]=temp[j];
            j++;
        }
    }
};

SOLUTION2:-
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
         int n=nums.size();
         k=k%n;
         reverse(nums.begin(),nums.end()-k);
         reverse(nums.end()-k,nums.end());
         reverse(nums.begin(),nums.end());
    }
};
