Given a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal.
A subarray is a contiguous part of the array.

Example 1:
Input: nums = [1,0,1,0,1], goal = 2
Output: 4

SOLUTION;
class Solution {
public:
    int ans(vector<int>& nums, int goal){
        if(goal<0) return 0;
        
        int n=nums.size();
        int l=0,r=0,sum=0,ct=0;
       while(r<n){
        sum+=nums[r];
        while(sum>goal){
            sum-=nums[l];
            l=l+1;
        }
        ct=ct+(r-l+1);
        r=r+1;
       }
       return ct;
    }
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        return ans(nums,goal)-ans(nums,goal-1);
    }
};
